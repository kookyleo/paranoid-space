// src/grammar/php.pest

// Make WHITESPACE non-silent to preserve it in the AST
WHITESPACE = { (" " | "\t" | "\r" | "\n")+ }

// PHP Tags - simplified for common cases
php_start_tag = { "<?php" | "<?=" } // <? is deprecated and often disabled
php_end_tag = { "?>" }

// Define atomic rules for quotes
SQ = _{ "'" }
DQ = _{ "\"" }

// --- PHP Content Rules ---
// These rules apply *inside* <?php ... ?> tags

// Comments
php_comment = { php_line_comment | php_block_comment }
php_line_comment = { ("//" | "#") ~ (!("\r" | "\n") ~ ANY)* }
php_block_comment = { "/*" ~ php_block_comment_inner* ~ "*/" }
php_block_comment_inner = { !( "*/" ) ~ ANY } // Match anything inside /* */ that isn't */

// Strings (Simplified - focusing on delimiters and basic escapes)
php_string = { php_single_quoted_string | php_double_quoted_string }

// String Content Rules - Match anything until the closing delimiter, handling escapes
// Use atomic quote rules SQ and DQ to avoid range ambiguity
php_sq_inner = { "\\" ~ (SQ | "\\") | (!SQ ~ ANY) }
php_dq_inner = { "\\" ~ (DQ | "\\") | (!DQ ~ ANY) }

// String Rules using inner content definition
php_single_quoted_string = { SQ ~ php_sq_inner* ~ SQ }
php_double_quoted_string = { DQ ~ php_dq_inner* ~ DQ }

// Define items that can appear in the PHP script body
php_code_char = { !(php_end_tag | php_comment | php_string) ~ ANY } // A single non-special character
php_script_body_item = _{ php_comment | php_string | php_code_char }

// Body of a PHP script block - sequence of items up to the end tag
php_script_body = { php_script_body_item* }

// --- Top Level Rules ---

// A chunk of PHP code including tags
php_chunk = { php_start_tag ~ php_script_body? ~ php_end_tag }

// A chunk of HTML content (anything not starting a PHP tag)
html_content_char = { !(php_start_tag) ~ ANY }
html_chunk = { html_content_char+ }

// The overall program structure
program = { SOI ~ (html_chunk | php_chunk)* ~ EOI }